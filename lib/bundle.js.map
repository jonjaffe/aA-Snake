{"version":3,"sources":["webpack:///webpack/bootstrap 733ed0bf294f3439a0e2","webpack:///./lib/coord.js","webpack:///./lib/snake_view.js","webpack:///./lib/board.js","webpack:///./lib/entry.js","webpack:///./lib/food.js","webpack:///./lib/snake.js","webpack:///./lib/obstacle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,UAAU;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD,cAAc,WAAW;AACzB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,yBAAyB,MAAM,IAAI,iCAAiC;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0HAA0H,iBAAiB;AAC3I,8BAA8B,cAAc;AAC5C;AACA,4BAA4B,iBAAiB;AAC7C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3IA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACjFA;AACA,WAAW,KAAK;;AAEhB;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;ACVD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AClHA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 733ed0bf294f3439a0e2","class Coord {\n  constructor(i, j) {\n    this.i = i;\n    this.j = j;\n  }\n\n  plus(newCoords) {\n    return new Coord(this.i + newCoords.i, this.j + newCoords.j);\n  }\n\n  equals(newCoords) {\n      return (this.i == newCoords.i) && (this.j == newCoords.j);\n  }\n\n  isOpposite(newCoords) {\n    return (this.i == (-1 * newCoords.i)) && (this.j == (-1 * newCoords.j));\n  }\n}\n\nmodule.exports = Coord;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/coord.js\n// module id = 0\n// module chunks = 0","const Board = require('./board.js');\n\nclass View {\n  constructor($el) {\n    this.$el = $el;\n\n    this.board = new Board(20);\n    this.setupGrid();\n    this.intervalId = null;\n    this.paused = true;\n    this.intervalManager();\n    // this.intervalId = window.setInterval(\n    //   this.step.bind(this),\n    //   View.STEP_MILLIS\n    // );\n\n    $(window).on(\"keydown\", this.handleKeyEvent.bind(this));\n  }\n\n  intervalManager() {\n    if (this.paused) {\n      this.paused = false;\n      this.intervalId = window.setInterval(\n        this.step.bind(this),\n        View.STEP_MILLIS\n      )\n    } else {\n      this.paused = true;\n      window.clearInterval(this.intervalId)\n    }\n  }\n\n  handleKeyEvent(event) {\n    if (View.KEYS[event.keyCode]) {\n      this.board.snake.turn(View.KEYS[event.keyCode]);\n    }\n    if (event.keyCode === 82) {\n      location.reload()\n    }\n    if (event.keyCode === 32) {\n      this.intervalManager();\n    }\n    // if (event.keyCode === 80) {\n    //   window.clearInterval(this.intervalId)\n    // }\n    //\n    // if (event.keyCode === 82) {\n    //   this.intervalId = window.setInterval(\n    //     this.step.bind(this),\n    //     View.STEP_MILLIS\n    //   )\n    // }\n  }\n\n  render() {\n    // simple text based rendering\n    // this.$el.html(this.board.render());\n\n    this.updateClasses(this.board.snake.segments, \"snake\");\n    this.updateClasses([this.board.food.position], \"food\");\n    this.updateClasses(this.board.obstacleCoords, \"obstacle\")\n  }\n\n  updateClasses(coords, className) {\n    this.$li.filter(`.${className}`).removeClass().html('');\n\n    coords.forEach( coord => {\n      const flatCoord = (coord.i * this.board.dim) + coord.j;\n      this.$li.eq(flatCoord).addClass(className);\n      if (className === 'food') {\n        this.$li.eq(flatCoord).html('<i class=\"fa fa-apple\" aria-hidden=\"true\"></i>')\n      }\n    });\n  }\n\n  setupGrid() {\n    let html = \"\";\n\n    for (let i = 0; i < this.board.dim; i++) {\n      html += \"<ul>\";\n      for (let j = 0; j < this.board.dim; j++) {\n        html += \"<li></li>\";\n      }\n      html += \"</ul>\";\n    }\n\n    this.$el.html(html);\n    this.$li = this.$el.find(\"li\");\n  }\n\n  findTopScores(storage) {\n    let scores = [];\n    for (let key in storage) {\n      // if ('J'.indexOf(storage[key]) !== -1) {\n      //   delete storage.key\n      // }\n      scores.push(storage[key]);\n    }\n    scores = scores.sort(function(a, b) {\n        if (parseInt(a) < parseInt(b)) { return 1; }\n        else { return -1; }\n    });\n    return scores.slice(0,5);\n  }\n\n  populateRankings() {\n    let $ranking = $('ul.ranking');\n    let topScores = this.findTopScores(localStorage)\n    // $ranking.empty();\n    for (let i = 0; i < 5; i++) {\n      let $li = $(`<li>${i + 1}. ${topScores[i] ? topScores[i] : ''}</li>`);\n      $ranking.append($li);\n    }\n  }\n\n  step() {\n    if (this.board.snake.segments.length > 0) {\n      this.board.snake.move();\n      this.render();\n    } else {\n      window.clearInterval(this.intervalId);\n      $('#canvas').html(`<p class='game-over animated wobble'>GAME OVER</p></br><p class='game-over-score'>Final Score: ${this.board.score}</p></br><h2 class='high-score-head'>HIGH SCORES</h2></br><ul class='ranking'></ul>`)\n      localStorage.setItem(`${Math.random()}`, this.board.score);\n      this.populateRankings();\n      // alert(`GAME OVER ${this.board.score}`);\n    }\n  }\n\n}\n\nView.KEYS = {\n  38: \"N\",\n  39: \"E\",\n  40: \"S\",\n  37: \"W\"\n};\n\nView.STEP_MILLIS = 100;\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/snake_view.js\n// module id = 1\n// module chunks = 0","const Snake = require('./snake');\nconst Food = require('./food');\nconst Coord = require('./coord');\nconst Obstacle = require('./obstacle');\n// const SnakeView = require('./snake_view')\n\nclass Board {\n  constructor(dim) {\n    this.dim = dim;\n\n    this.snake = new Snake(this);\n    this.obstacle = new Obstacle(this);\n    this.score = 0;\n    this.level = 1\n    this.obstacleCoords = [this.obstacle.position]\n    this.food = new Food(this);\n  }\n\n  static blankGrid(dim) {\n    const grid = [];\n\n    for (let i = 0; i < dim; i++) {\n      const row = [];\n      for (let j = 0; j < dim; j++) {\n        row.push(Board.BLANK_SYMBOL);\n      }\n      grid.push(row);\n    }\n\n    return grid;\n  }\n  render() {\n    const grid = Board.blankGrid(this.dim);\n\n    this.snake.segments.forEach( segment => {\n      grid[segment.i][segment.j] = Snake.SYMBOL;\n    });\n\n    grid[this.food.position.i][this.food.position.j] = Food.SYMBOL;\n\n    const rowStrs = [];\n    grid.map( row => row.join(\"\") ).join(\"\\n\");\n  }\n\n  validPosition(coord) {\n    return (coord.i >= 0) && (coord.i < this.dim) &&\n      (coord.j >= 0) && (coord.j < this.dim);\n  }\n\n  updateInfo() {\n    let score = $('.score')\n    this.score += 10\n    $('.score').text(`Score: 0${this.score}`)\n    if (this.score == 30) {\n      this.addObstacle()\n      this.level++\n      $('.level').text(`Level: ${this.level}`)\n    }\n    if (this.score == 60) {\n      this.addObstacle()\n      this.level++\n      $('.level').text(`Level: ${this.level}`)\n    }\n    if (this.score == 100) {\n      this.addObstacle()\n      this.level++\n      $('.level').text(`Level: ${this.level}`)\n    }\n    if (this.score > 99) {\n      $('.score').text(`Score: ${this.score}`)\n    }\n  }\n\n  addObstacle() {\n    let obstacle2 = new Obstacle(this)\n    this.obstacleCoords.push(obstacle2.position)\n  }\n}\n\nBoard.BLANK_SYMBOL = '.'\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 2\n// module chunks = 0","const SnakeView = require('./snake_view')\n// import {View} from './snake_view'\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = $('#canvas');\n  canvasEl.width = 500;\n  canvasEl.height = 500;\n    // const ctx = canvasEl.getContext(\"2d\");\n  new SnakeView(canvasEl)\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entry.js\n// module id = 3\n// module chunks = 0","const Coord = require(\"./coord\");\n\nclass Food {\n  constructor(board) {\n    this.board = board;\n    this.replace();\n  }\n\n  replace() {\n    let x = Math.floor(Math.random() * this.board.dim);\n    let y = Math.floor(Math.random() * this.board.dim);\n    while (this.board.snake.isOccupying([x, y]) || this.board.obstacle.isOccupying([x,y])) {\n      x = Math.floor(Math.random() * this.board.dim);\n      y = Math.floor(Math.random() * this.board.dim);\n    }\n\n    this.position = new Coord(x, y);\n  }\n\n}\n\nFood.SYMBOL = 'F'\n\nmodule.exports = Food;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/food.js\n// module id = 4\n// module chunks = 0","const Coord = require('./coord');\n\nclass Snake {\n  constructor(board) {\n    this.board = board\n    this.direction = 'S'\n    this.turning = false\n    const topLeft = new Coord(Math.floor(board.dim / 4), Math.floor(board.dim / 4))\n    this.segments = [topLeft]\n    this.growTurns = 0\n  }\n\n  head() {\n    return this.segments.slice(-1)[0];\n  }\n\n  isOccupying(array) {\n    let result = false;\n    // for (let i = 0; i < this.segments.length; i++) {\n    //   if (this.segments[i].i === array[0] && this.segments[i].j === array[1]) {\n    //     result = true;\n    //     return result;\n    //   }\n    // }\n    //\n    // return result;\n    this.segments.forEach( segment => {\n      if (segment.i === array[0] && segment.j === array[1]) {\n        result = true;\n        return result;\n      }\n    });\n    return result;\n  }\n\n  isValid() {\n    const head = this.head();\n\n    if (!this.board.validPosition(this.head())) {\n      return false;\n    }\n\n    // if (this.head().equals(this.board.obstacle.position)) {\n    //   return false;\n    // }\n\n    for (let i = 0; i < this.board.obstacleCoords.length; i++) {\n      if (this.board.obstacleCoords[i].equals(head)) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < this.segments.length - 1; i++) {\n      if (this.segments[i].equals(head)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  move() {\n    this.segments.push(this.head().plus(Snake.POS_CHANGE[this.direction]));\n\n    this.turning = false;\n\n    if (this.eatFood()) {\n      this.board.food.replace();\n      this.board.obstacle.replace();\n      this.board.updateInfo();\n    }\n\n    if (this.growTurns > 0) {\n      this.growTurns -= 1;\n    } else {\n      this.segments.shift();\n    }\n\n    if (!this.isValid()) {\n      this.segments = [];\n    }\n  }\n\n  turn(direction) {\n    if (Snake.POS_CHANGE[this.direction].isOpposite(Snake.POS_CHANGE[direction]) ||\n      this.turning) {\n      return\n    } else {\n      this.turning = true;\n      this.direction = direction;\n    }\n  }\n\n  eatFood() {\n    if (this.head().equals(this.board.food.position)) {\n      this.growTurns += 3;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nSnake.POS_CHANGE = {\n  \"N\": new Coord(-1, 0),\n  \"E\": new Coord(0, 1),\n  \"S\": new Coord(1, 0),\n  \"W\": new Coord(0, -1)\n}\n\nSnake.SYMBOL = \"S\";\nSnake.GROW_TURNS = 3;\n\nmodule.exports = Snake;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/snake.js\n// module id = 5\n// module chunks = 0","const Coord = require(\"./coord\");\n\nclass Obstacle {\n  constructor(board) {\n    this.board = board;\n    this.replace();\n  }\n\n  replace() {\n    let x = Math.floor(Math.random() * this.board.dim);\n    let y = Math.floor(Math.random() * this.board.dim);\n\n    while (this.board.snake.isOccupying([x, y])) {\n      x = Math.floor(Math.random() * this.board.dim);\n      y = Math.floor(Math.random() * this.board.dim);\n    }\n\n    this.position = new Coord(x, y);\n  }\n\n  isOccupying(array) {\n    let result = false;\n    this.board.obstacleCoords.forEach( obstacle => {\n      if (obstacle.i === array[0] && obstacle.j === array[1]) {\n        result = true;\n        return result;\n      }\n    });\n    return result;\n  }\n\n}\n\nObstacle.SYMBOL = 'O'\n\nmodule.exports = Obstacle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/obstacle.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}